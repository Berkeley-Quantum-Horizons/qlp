# Generated by Django 3.1.2 on 2020-11-02 18:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('graph', '0001_initial'),
        ('experiment', '0001_initial'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='experiment',
            name='unique_experiment',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='chain_strength',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='graph',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='machine',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='p',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='settings',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='settings_hash',
        ),
        migrations.RemoveField(
            model_name='experiment',
            name='tag',
        ),
        migrations.CreateModel(
            name='HMCExperiment',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiment.experiment')),
                ('beta', models.DecimalField(decimal_places=6, help_text='Inverse temperature, 0 to 9999.999999', max_digits=10)),
                ('thermalization_steps', models.PositiveIntegerField(help_text='Number of thermalization steps before measuring trajectories.')),
                ('evolution_steps', models.PositiveIntegerField(help_text='Number of evolution steps when used in measurement.')),
                ('shift_c', models.DecimalField(decimal_places=6, help_text='???, 0 to 9999.999999', max_digits=10)),
                ('trajectory_length', models.DecimalField(decimal_places=6, help_text='???, 0 to 9999.999999', max_digits=10)),
                ('md_steps', models.PositiveIntegerField(help_text='Number of molecular dynamics steps.')),
                ('misc', models.JSONField(help_text='Dump field for future data. Should be a python dict.')),
                ('graph', models.ForeignKey(help_text='Foreign Key to `graph`', on_delete=django.db.models.deletion.CASCADE, to='graph.graph')),
            ],
            bases=('experiment.experiment',),
        ),
        migrations.CreateModel(
            name='DWaveExperiment',
            fields=[
                ('experiment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiment.experiment')),
                ('machine', models.TextField(help_text='Hardware name (e.g. DW_2000Q_5)')),
                ('settings', models.JSONField(help_text='Store DWave machine parameters')),
                ('settings_hash', models.TextField(help_text='md5 hash of key sorted normalized machine, settings, p, dictionary')),
                ('p', models.DecimalField(decimal_places=2, help_text='Coefficient of penalty term, 0 to 9999.99', max_digits=6)),
                ('chain_strength', models.FloatField(help_text='Set chain strength before auto_scaling')),
                ('tag', models.TextField(help_text='Tag describing the anneal schedule. (Easier to just unique with tag.)')),
                ('graph', models.ForeignKey(help_text='Foreign Key to `graph`', on_delete=django.db.models.deletion.CASCADE, to='graph.graph')),
            ],
            bases=('experiment.experiment',),
        ),
        migrations.AddConstraint(
            model_name='hmcexperiment',
            constraint=models.UniqueConstraint(fields=('graph', 'beta', 'thermalization_steps', 'evolution_steps', 'shift_c', 'trajectory_length', 'md_steps'), name='unique_hmc_run'),
        ),
        migrations.AddConstraint(
            model_name='dwaveexperiment',
            constraint=models.UniqueConstraint(fields=('graph', 'machine', 'settings_hash', 'p', 'chain_strength', 'tag'), name='unique_experiment'),
        ),
    ]
