# Generated by Django 3.0.3 on 2020-04-22 06:47

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tdse', '0002_auto_20200416_0543'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='tdse',
            name='entropy',
        ),
        migrations.RemoveField(
            model_name='tdse',
            name='indicesA',
        ),
        migrations.RemoveField(
            model_name='tdse',
            name='nA',
        ),
        migrations.RemoveField(
            model_name='tdse',
            name='prob',
        ),
        migrations.RemoveField(
            model_name='tdse',
            name='time',
        ),
        migrations.AddField(
            model_name='tdse',
            name='instance',
            field=picklefield.fields.PickledObjectField(default=0, editable=False, help_text='save instance of class'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TdseResult',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.CharField(blank=True, help_text='User defined tag for easy searches', max_length=200, null=True)),
                ('time', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Normalized time array for evolution', size=None)),
                ('prob', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Ising ground state probability vs. time', size=None)),
                ('nA', models.PositiveSmallIntegerField(help_text='Number of qubits in partition A')),
                ('indicesA', models.TextField(help_text='einsum index string for entropy calculation')),
                ('entropy', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='von Neumann entropy vs. time', size=None)),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='tdseresult',
            constraint=models.UniqueConstraint(fields=('nA', 'indicesA'), name='unique_tdseresult'),
        ),
    ]
