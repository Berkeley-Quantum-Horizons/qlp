# Generated by Django 3.0.3 on 2020-04-22 07:59

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('graph', '0002_auto_20200311_2252'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tdse',
            fields=[
                ('id', models.AutoField(help_text='Primary key for Base class.', primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date the class was last modified')),
                ('tag', models.TextField(help_text='User-defined tag for easy searches')),
                ('penalty', models.DecimalField(decimal_places=2, help_text='Coefficient of penalty term, 0 to 9999.99', max_digits=6)),
                ('ising', django.contrib.postgres.fields.jsonb.JSONField(help_text='Ising parameters: Jij, hi, c, energyscale')),
                ('ising_hash', models.TextField(help_text='md5 hash for Ising parameters')),
                ('offset', django.contrib.postgres.fields.jsonb.JSONField(help_text='Offset parameters: normalized time, offset, hi_for_offset, offset_min, offset_range, fill_value, anneal_curve')),
                ('offset_hash', models.TextField(help_text='md5 hash for offset parameters')),
                ('solver', django.contrib.postgres.fields.jsonb.JSONField(help_text='Solver parameters: method, rtol, atol')),
                ('solver_hash', models.TextField(help_text='md5 hash for solver parameters')),
                ('wave', django.contrib.postgres.fields.jsonb.JSONField(help_text='Wavefunction: type (mixed or pure), temp, initial wavefunction (True or transverse')),
                ('wave_hash', models.TextField(help_text='md5 hash for wave parameters')),
                ('instance', picklefield.fields.PickledObjectField(editable=False, help_text='save instance of class')),
                ('time', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Normalized time array for evolution', size=None)),
                ('prob', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Ising ground state probability vs. time', size=None)),
                ('nA', models.PositiveSmallIntegerField(help_text='Number of qubits in partition A')),
                ('indicesA', models.TextField(help_text='einsum index string for entropy calculation')),
                ('entropy', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='von Neumann entropy vs. time', size=None)),
                ('test', models.TextField()),
                ('graph', models.ForeignKey(help_text='Foreign Key to `graph`', on_delete=django.db.models.deletion.CASCADE, to='graph.Graph')),
                ('user', models.ForeignKey(blank=True, help_text='User who updated this object. Set on save by connection to database. Ananymous if not found.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='tdse',
            constraint=models.UniqueConstraint(fields=('tag', 'graph', 'penalty', 'ising_hash', 'offset_hash', 'solver_hash', 'wave_hash', 'nA', 'indicesA'), name='unique_tdse'),
        ),
    ]
